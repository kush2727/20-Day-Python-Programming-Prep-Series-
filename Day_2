{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOpJG4+1iSAlJnV16i07Qab",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kush2727/20-Day-Python-Programming-Prep-Series-/blob/main/Day_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6)Write a program to find the smallest among three numbers.\n"
      ],
      "metadata": {
        "id": "MEcOmF0ewb0l"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "DDpnL0PquUqs",
        "outputId": "10a46af7-5ed7-4dd9-f294-5bd0e44f981d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter first number: 32\n",
            "Enter second number: 35\n",
            "Enter third number: 200\n",
            "The smallest number is: 32\n"
          ]
        }
      ],
      "source": [
        "a = int(input(\"Enter first number: \"))\n",
        "b = int(input(\"Enter second number: \"))\n",
        "c = int(input(\"Enter third number: \"))\n",
        "if a <= b and a<= c:\n",
        "    print(\"The smallest number is:\", a)\n",
        "elif b >= a and b<= c:\n",
        "    print(\"The smallest number is:\", b)\n",
        "else:\n",
        "    print(\"The smallest number is:\", c)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "7)Write a program to Swap two numbers(Using Arithmetic operations)\n"
      ],
      "metadata": {
        "id": "qwft3e5LyIP8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a=200\n",
        "b=400\n",
        "a=a+b\n",
        "b=a-b\n",
        "a=a-b\n",
        "print(f\"a:{a}\")\n",
        "print(f\"b:{b}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "lJxTcQ8iyioQ",
        "outputId": "68ffe4b1-1ff2-4c89-b2ff-2dc979ca7046"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "a:400\n",
            "b:200\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "8)Write a program to check whether a person is eligible to vote or not.\n"
      ],
      "metadata": {
        "id": "cFGUUNkyy69C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "age=int(input(\"Enter age: \"))\n",
        "if age>=18:\n",
        "  print(\"Eligible to vote\")\n",
        "else:\n",
        "  print(\"Not eligible to vote\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "_GIJ-bwEy1bG",
        "outputId": "13bb8014-3499-4ecd-917b-1699c6e4e341"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter age: 12\n",
            "Not eligible to vote\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "9)Write a program to check whether a given year is a leap year or not."
      ],
      "metadata": {
        "id": "DuMzAKFOzRdH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "year=int(input(\"Year: \"))\n",
        "if (year%4==0 and year%100!=0) or (year%400==0):\n",
        "  print(\"Leap Year\")\n",
        "else:\n",
        "  print(\"Not a Leap Year\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "aaMXwL9iy4CC",
        "outputId": "50d76c0f-8289-415c-d9b6-85114ad49d9c"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Leap Year\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "10)Write a program to check whether a number is positive, negative, or zero."
      ],
      "metadata": {
        "id": "v9hon8plz2Pv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"Num: \"))\n",
        "if num>0:\n",
        "  print(\"Positive Number\")\n",
        "elif num<0:\n",
        "  print(\"Negative Number\")\n",
        "else:\n",
        "  print(\"Zero\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "zRPMYI8qzfv_",
        "outputId": "2c963f4c-a09c-4624-f959-9e19a4b86175"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Num: 5\n",
            "Positive Number\n"
          ]
        }
      ]
    }
  ]
}